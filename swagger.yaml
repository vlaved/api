---
swagger: "2.0"
info:
  description: "Предоставляет необходимые данные для мониторинга актуальной информации по конвейеру на экране телевизора"
  version: "1.0"
  title: "Визуализация конвейера API"
host: "localhost"
basePath: "/viz"
tags:
- name: "conveyer"
  description: "Очередь конвейера"
- name: "nzp"
  description: "Незавершенное производство"
- name: "sgp"
  description: "Склад готовой продукции"
- name: "beats"
  description: "Такт конвейера"
schemes:
- "http"
paths:
  /conveyer:
    get:
      tags:
      - "conveyer"
      summary: "Finds Pets by status"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "conveyer"
      produces:
      - "application/json"
      responses:
        400:
          description: "Invalid status value"
  /nzp:
    get:
      tags:
      - "nzp"
      summary: "Finds Pets by status"
      description: ""
      operationId: "nzp"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/nzp"
        400:
          description: "Invalid status value"
      deprecated: true
  /sgp:
    get:
      tags:
      - "sgp"
      summary: "Finds Pets by status"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "sgp"
      produces:
      - "application/json"
      responses:
        400:
          description: "Invalid status value"
      deprecated: true
  /beats:
    get:
      tags:
      - "beats"
      summary: "Finds Pets by status"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "beats"
      produces:
      - "application/json"
      responses:
        400:
          description: "Invalid status value"
      deprecated: true
definitions:
  nzp:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int64"
      errors:
        type: "integer"
        format: "int64"
      models:
        type: "array"
        xml:
          wrapped: true
        items:
          xml:
            name: "Model"
          $ref: "#/definitions/Model"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "nzp"
  Model:
    type: "object"
    properties:
      model:
        type: "integer"
        format: "int64"
      count:
        type: "string"
    xml:
      name: "Model"